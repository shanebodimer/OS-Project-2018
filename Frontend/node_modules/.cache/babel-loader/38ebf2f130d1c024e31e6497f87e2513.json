{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar AnalyticsEvent =\n/*#__PURE__*/\nfunction () {\n  function AnalyticsEvent(props) {\n    var _this = this;\n\n    _classCallCheck(this, AnalyticsEvent);\n\n    _defineProperty(this, \"payload\", void 0);\n\n    _defineProperty(this, \"clone\", function () {\n      // We stringify and parse here to get a hacky \"deep clone\" of the object.\n      // This has some limitations in that it wont support functions, regexs, Maps, Sets, etc,\n      // but none of those need to be represented in our payload, so we consider this fine\n      var payload = JSON.parse(JSON.stringify(_this.payload));\n      return new AnalyticsEvent({\n        payload: payload\n      });\n    });\n\n    this.payload = props.payload;\n  }\n\n  _createClass(AnalyticsEvent, [{\n    key: \"update\",\n    value: function update(updater) {\n      if (typeof updater === 'function') {\n        this.payload = updater(this.payload);\n      } else if (_typeof(updater) === 'object') {\n        this.payload = _objectSpread({}, this.payload, updater);\n      }\n\n      return this;\n    }\n  }]);\n\n  return AnalyticsEvent;\n}();\n\nexport { AnalyticsEvent as default };","map":null,"metadata":{},"sourceType":"module"}