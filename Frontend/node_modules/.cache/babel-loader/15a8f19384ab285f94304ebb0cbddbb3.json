{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport objectAssign from 'object-assign';\nimport omit from 'object.omit';\nimport Core from './lib/ElementRelativeCursorPosition';\nimport addEventListener from './utils/addEventListener';\nimport * as constants from './constants';\nimport noop from './utils/noop';\n\nvar _class = function (_React$Component) {\n  _inherits(_class, _React$Component);\n\n  function _class(props) {\n    _classCallCheck(this, _class);\n\n    var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      detectedEnvironment: {\n        isMouseDetected: false,\n        isTouchDetected: false\n      },\n      elementDimensions: {\n        width: 0,\n        height: 0\n      },\n      isActive: false,\n      isPositionOutside: true,\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    _this.shouldGuardAgainstMouseEmulationByDevices = false;\n    _this.eventListeners = [];\n    _this.timers = [];\n    _this.elementOffset = {\n      x: 0,\n      y: 0\n    };\n    _this.onTouchStart = _this.onTouchStart.bind(_this);\n    _this.onTouchMove = _this.onTouchMove.bind(_this);\n    _this.onTouchEnd = _this.onTouchEnd.bind(_this);\n    _this.onTouchCancel = _this.onTouchCancel.bind(_this);\n    _this.onMouseEnter = _this.onMouseEnter.bind(_this);\n    _this.onMouseMove = _this.onMouseMove.bind(_this);\n    _this.onMouseLeave = _this.onMouseLeave.bind(_this);\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: 'onTouchStart',\n    value: function onTouchStart(e) {\n      this.init();\n      this.onTouchDetected();\n      this.setShouldGuardAgainstMouseEmulationByDevices();\n      var position = this.core.getCursorPosition(this.getTouchEvent(e));\n      this.setPositionState(position);\n\n      if (this.props.isActivatedOnTouch) {\n        e.preventDefault();\n        this.activate();\n        return;\n      }\n\n      this.initPressEventCriteria(position);\n      this.setPressEventTimer();\n    }\n  }, {\n    key: 'onTouchMove',\n    value: function onTouchMove(e) {\n      if (!this.isCoreReady) {\n        return;\n      }\n\n      var position = this.core.getCursorPosition(this.getTouchEvent(e));\n\n      if (!this.state.isActive) {\n        this.setPressEventCriteria(position);\n        return;\n      }\n\n      this.setPositionState(position);\n      e.preventDefault();\n\n      if (this.props.shouldStopTouchMovePropagation) {\n        e.stopPropagation();\n      }\n    }\n  }, {\n    key: 'onTouchEnd',\n    value: function onTouchEnd() {\n      this.deactivate();\n      this.unsetShouldGuardAgainstMouseEmulationByDevices();\n    }\n  }, {\n    key: 'onTouchCancel',\n    value: function onTouchCancel() {\n      this.deactivate();\n      this.unsetShouldGuardAgainstMouseEmulationByDevices();\n    }\n  }, {\n    key: 'onMouseEnter',\n    value: function onMouseEnter(e) {\n      if (this.shouldGuardAgainstMouseEmulationByDevices) {\n        return;\n      }\n\n      this.init();\n      this.onMouseDetected();\n      this.setPositionState(this.core.getCursorPosition(e));\n      this.clearActivationTimers();\n      this.schedulActivation(this.props.hoverDelayInMs);\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(e) {\n      if (!this.isCoreReady) {\n        return;\n      }\n\n      this.setPositionState(this.core.getCursorPosition(e));\n    }\n  }, {\n    key: 'onMouseLeave',\n    value: function onMouseLeave() {\n      this.clearActivationTimers();\n      this.scheduleDeactivation(this.props.hoverOffDelayInMs);\n      this.setState({\n        isPositionOutside: true\n      });\n    }\n  }, {\n    key: 'onTouchDetected',\n    value: function onTouchDetected() {\n      var environment = {\n        isTouchDetected: true,\n        isMouseDetected: false\n      };\n      this.setState({\n        detectedEnvironment: environment\n      });\n      this.props.onDetectedEnvironmentChanged(environment);\n    }\n  }, {\n    key: 'onMouseDetected',\n    value: function onMouseDetected() {\n      var environment = {\n        isTouchDetected: false,\n        isMouseDetected: true\n      };\n      this.setState({\n        detectedEnvironment: environment\n      });\n      this.props.onDetectedEnvironmentChanged(environment);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.isEnabled) {\n        this.enable();\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(_ref) {\n      var willBeEnabled = _ref.isEnabled;\n      var isEnabled = this.props.isEnabled;\n      var isEnabledWillChange = isEnabled !== willBeEnabled;\n\n      if (!isEnabledWillChange) {\n        return;\n      }\n\n      if (willBeEnabled) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearTimers();\n      this.disable();\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.addEventListeners();\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.removeEventListeners();\n    }\n  }, {\n    key: 'init',\n    value: function init() {\n      this.core = new Core(this.el);\n      this.setElementDimensionsState(this.getElementDimensions(this.el));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      var _core = this.core;\n      _core = _core === undefined ? {} : _core;\n      var lastMouseEvent = _core.lastEvent;\n      this.init();\n\n      if (!lastMouseEvent) {\n        return;\n      }\n\n      this.setPositionState(this.core.getCursorPosition(lastMouseEvent));\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      this.setState({\n        isActive: true\n      });\n      this.props.onActivationChanged({\n        isActive: true\n      });\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      var _this2 = this;\n\n      this.clearTimer(constants.PRESS_EVENT_TIMER_NAME);\n      this.setState({\n        isActive: false\n      }, function () {\n        var _state = _this2.state,\n            isPositionOutside = _state.isPositionOutside,\n            position = _state.position;\n\n        _this2.props.onPositionChanged({\n          isPositionOutside: isPositionOutside,\n          position: position\n        });\n\n        _this2.props.onActivationChanged({\n          isActive: false\n        });\n      });\n    }\n  }, {\n    key: 'setPositionState',\n    value: function setPositionState(position) {\n      var isPositionOutside = this.getIsPositionOutside(position);\n      this.setState({\n        isPositionOutside: isPositionOutside,\n        position: position\n      }, this.onPositionChanged);\n    }\n  }, {\n    key: 'setElementDimensionsState',\n    value: function setElementDimensionsState(dimensions) {\n      this.setState({\n        elementDimensions: dimensions\n      });\n    }\n  }, {\n    key: 'schedulActivation',\n    value: function schedulActivation(schedule) {\n      var _this3 = this;\n\n      var scheduleId = setTimeout(function () {\n        _this3.activate();\n      }, schedule);\n      this.timers.push({\n        id: scheduleId,\n        name: constants.SET_ACTIVATION_TIMER_NAME\n      });\n    }\n  }, {\n    key: 'scheduleDeactivation',\n    value: function scheduleDeactivation(schedule) {\n      var _this4 = this;\n\n      var scheduleId = setTimeout(function () {\n        _this4.deactivate();\n      }, schedule);\n      this.timers.push({\n        id: scheduleId,\n        name: constants.UNSET_ACTIVATION_TIMER_NAME\n      });\n    }\n  }, {\n    key: 'clearActivationTimers',\n    value: function clearActivationTimers() {\n      this.clearTimer(constants.SET_ACTIVATION_TIMER_NAME);\n      this.clearTimer(constants.UNSET_ACTIVATION_TIMER_NAME);\n    }\n  }, {\n    key: 'setPressEventTimer',\n    value: function setPressEventTimer() {\n      var _this5 = this;\n\n      var _props = this.props,\n          pressDuration = _props.pressDuration,\n          pressMoveThreshold = _props.pressMoveThreshold;\n      this.timers.push({\n        name: constants.PRESS_EVENT_TIMER_NAME,\n        id: setTimeout(function () {\n          if (Math.abs(_this5.currentElTop - _this5.initialElTop) < pressMoveThreshold) {\n            _this5.activate();\n          }\n        }, pressDuration)\n      });\n    }\n  }, {\n    key: 'setPressEventCriteria',\n    value: function setPressEventCriteria(position) {\n      this.currentElTop = position.y;\n    }\n  }, {\n    key: 'initPressEventCriteria',\n    value: function initPressEventCriteria(position) {\n      var top = position.y;\n      this.initialElTop = top;\n      this.currentElTop = top;\n    }\n  }, {\n    key: 'setShouldGuardAgainstMouseEmulationByDevices',\n    value: function setShouldGuardAgainstMouseEmulationByDevices() {\n      this.shouldGuardAgainstMouseEmulationByDevices = true;\n    }\n  }, {\n    key: 'unsetShouldGuardAgainstMouseEmulationByDevices',\n    value: function unsetShouldGuardAgainstMouseEmulationByDevices() {\n      var _this6 = this;\n\n      this.timers.push({\n        name: constants.MOUSE_EMULATION_GUARD_TIMER_NAME,\n        id: setTimeout(function () {\n          _this6.shouldGuardAgainstMouseEmulationByDevices = false;\n        }, 0)\n      });\n    }\n  }, {\n    key: 'clearTimers',\n    value: function clearTimers() {\n      var timers = this.timers;\n\n      while (timers.length) {\n        var timer = timers.pop();\n        clearTimeout(timer.id);\n      }\n    }\n  }, {\n    key: 'clearTimer',\n    value: function clearTimer(timerName) {\n      this.timers.forEach(function (timer) {\n        if (timer.name === timerName) {\n          clearTimeout(timer.id);\n        }\n      });\n    }\n  }, {\n    key: 'getElementDimensions',\n    value: function getElementDimensions(el) {\n      var _el$getBoundingClient = el.getBoundingClientRect(),\n          width = _el$getBoundingClient.width,\n          height = _el$getBoundingClient.height;\n\n      return {\n        width: width,\n        height: height\n      };\n    }\n  }, {\n    key: 'getIsPositionOutside',\n    value: function getIsPositionOutside(position) {\n      var x = position.x,\n          y = position.y;\n      var _state$elementDimensi = this.state.elementDimensions,\n          width = _state$elementDimensi.width,\n          height = _state$elementDimensi.height;\n      var isPositionOutside = x < 0 || y < 0 || x > width || y > height;\n      return isPositionOutside;\n    }\n  }, {\n    key: 'getTouchEvent',\n    value: function getTouchEvent(e) {\n      return e.touches[0];\n    }\n  }, {\n    key: 'getIsReactComponent',\n    value: function getIsReactComponent(reactElement) {\n      return typeof reactElement.type === 'function';\n    }\n  }, {\n    key: 'shouldDecorateChild',\n    value: function shouldDecorateChild(child) {\n      return !!child && this.getIsReactComponent(child) && this.props.shouldDecorateChildren;\n    }\n  }, {\n    key: 'decorateChild',\n    value: function decorateChild(child, props) {\n      return cloneElement(child, props);\n    }\n  }, {\n    key: 'decorateChildren',\n    value: function decorateChildren(children, props) {\n      var _this7 = this;\n\n      return Children.map(children, function (child) {\n        return _this7.shouldDecorateChild(child) ? _this7.decorateChild(child, props) : child;\n      });\n    }\n  }, {\n    key: 'addEventListeners',\n    value: function addEventListeners() {\n      this.eventListeners.push(addEventListener(this.el, 'touchstart', this.onTouchStart, {\n        passive: false\n      }), addEventListener(this.el, 'touchmove', this.onTouchMove, {\n        passive: false\n      }), addEventListener(this.el, 'touchend', this.onTouchEnd), addEventListener(this.el, 'touchcancel', this.onTouchCancel), addEventListener(this.el, 'mouseenter', this.onMouseEnter), addEventListener(this.el, 'mousemove', this.onMouseMove), addEventListener(this.el, 'mouseleave', this.onMouseLeave));\n    }\n  }, {\n    key: 'removeEventListeners',\n    value: function removeEventListeners() {\n      while (this.eventListeners.length) {\n        this.eventListeners.pop().removeEventListener();\n      }\n    }\n  }, {\n    key: 'getPassThroughProps',\n    value: function getPassThroughProps() {\n      var ownPropNames = Object.keys(this.constructor.propTypes);\n      return omit(this.props, ownPropNames);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this8 = this;\n\n      var _props2 = this.props,\n          children = _props2.children,\n          className = _props2.className,\n          mapChildProps = _props2.mapChildProps,\n          style = _props2.style;\n      var props = objectAssign({}, mapChildProps(this.state), this.getPassThroughProps());\n      return React.createElement('div', {\n        className: className,\n        ref: function ref(el) {\n          return _this8.el = el;\n        },\n        style: objectAssign({}, style, {\n          WebkitUserSelect: 'none'\n        })\n      }, this.decorateChildren(children, props));\n    }\n  }, {\n    key: 'isCoreReady',\n    get: function get() {\n      return !!this.core;\n    }\n  }]);\n\n  return _class;\n}(React.Component);\n\n_class.displayName = 'ReactCursorPosition';\n_class.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  hoverDelayInMs: PropTypes.number,\n  hoverOffDelayInMs: PropTypes.number,\n  isActivatedOnTouch: PropTypes.bool,\n  isEnabled: PropTypes.bool,\n  mapChildProps: PropTypes.func,\n  onActivationChanged: PropTypes.func,\n  onPositionChanged: PropTypes.func,\n  onDetectedEnvironmentChanged: PropTypes.func,\n  pressDuration: PropTypes.number,\n  pressMoveThreshold: PropTypes.number,\n  shouldDecorateChildren: PropTypes.bool,\n  shouldStopTouchMovePropagation: PropTypes.bool,\n  style: PropTypes.object\n};\n_class.defaultProps = {\n  isActivatedOnTouch: false,\n  isEnabled: true,\n  hoverDelayInMs: 0,\n  hoverOffDelayInMs: 0,\n  mapChildProps: function mapChildProps(props) {\n    return props;\n  },\n  onActivationChanged: noop,\n  onPositionChanged: noop,\n  onDetectedEnvironmentChanged: noop,\n  pressDuration: 500,\n  pressMoveThreshold: 5,\n  shouldDecorateChildren: true,\n  shouldStopTouchMovePropagation: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this9 = this;\n\n  this.onPositionChanged = function () {\n    var onPositionChanged = _this9.props.onPositionChanged;\n    onPositionChanged(_this9.state);\n  };\n};\n\nexport default _class;","map":null,"metadata":{},"sourceType":"module"}