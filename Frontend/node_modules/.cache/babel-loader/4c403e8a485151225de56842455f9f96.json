{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport { Consumer, Provider } from '../components/Context';\n\nvar Theme =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Theme, _Component);\n\n  function Theme() {\n    _classCallCheck(this, Theme);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Theme).apply(this, arguments));\n  }\n\n  _createClass(Theme, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          values = _this$props.values;\n      return React.createElement(Consumer, null, function (parent) {\n        var merged = (values || theme)(parent);\n        return typeof children === 'function' ? children(merged) : React.createElement(Provider, {\n          value: merged\n        }, children);\n      });\n    }\n  }]);\n\n  return Theme;\n}(Component);\n\n_defineProperty(Theme, \"defaultProps\", {\n  theme: function theme(v) {\n    return v;\n  }\n});\n\nexport { Theme as default };","map":null,"metadata":{},"sourceType":"module"}