{"ast":null,"code":"import _classCallCheck from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/shane/Git/OS-Project-2018/Frontend/src/Components/BatchResult.jsx\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { fetch } from \"../Utilities/api.jsx\";\nvar data = [{\n  name: \"Page A\",\n  modifier: 4000\n}, {\n  name: \"Page B\",\n  modifier: 3000\n}, {\n  name: \"Page C\",\n  modifier: 2000\n}, {\n  name: \"Page D\",\n  modifier: 2780\n}, {\n  name: \"Page E\",\n  modifier: 1890\n}, {\n  name: \"Page F\",\n  modifier: 2390\n}, {\n  name: \"Page G\",\n  modifier: 3490\n}];\n\nvar BatchResult =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BatchResult, _React$Component);\n\n  function BatchResult(props) {\n    var _this;\n\n    _classCallCheck(this, BatchResult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BatchResult).call(this, props)); // Set initial state\n\n    _this.state = {\n      data: false\n    };\n    fetch().then(function (res) {\n      _this.setState({\n        data: res\n      });\n    });\n    setInterval(function () {\n      return fetch().then(function (res) {\n        _this.setState({\n          data: res\n        });\n      });\n    }, 2000); // Bind state operators\n\n    _this.fetchNew = _this.fetchNew.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BatchResult, [{\n    key: \"fetchNew\",\n    value: function fetchNew() {\n      var _this2 = this;\n\n      fetch().then(function (res) {\n        _this2.setState({\n          data: res\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.mod ? this.props.mod : \"Max iterations\", \" vs. Time\"), \"in seconds\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), this.state.data && React.createElement(LineChart, {\n        width: 730,\n        height: 500,\n        data: this.state.data,\n        margin: {\n          top: 5,\n          right: 20,\n          left: 0,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"5 5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        dataKey: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"time\",\n        stroke: \"#0052cc\",\n        strokeWidth: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BatchResult;\n}(React.Component);\n\nexport { BatchResult as default };","map":{"version":3,"sources":["/Users/shane/Git/OS-Project-2018/Frontend/src/Components/BatchResult.jsx"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","fetch","data","name","modifier","BatchResult","props","state","then","res","setState","setInterval","fetchNew","bind","mod","top","right","left","bottom","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nimport { fetch } from \"../Utilities/api.jsx\";\n\nconst data = [\n  { name: \"Page A\", modifier: 4000 },\n  { name: \"Page B\", modifier: 3000 },\n  { name: \"Page C\", modifier: 2000 },\n  { name: \"Page D\", modifier: 2780 },\n  { name: \"Page E\", modifier: 1890 },\n  { name: \"Page F\", modifier: 2390 },\n  { name: \"Page G\", modifier: 3490 }\n];\n\nexport default class BatchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set initial state\n    this.state = {\n      data: false\n    };\n\n    fetch().then(res => {\n      this.setState({\n        data: res\n      });\n    });\n\n    setInterval(\n      () =>\n        fetch().then(res => {\n          this.setState({\n            data: res\n          });\n        }),\n      2000\n    );\n\n    // Bind state operators\n    this.fetchNew = this.fetchNew.bind(this);\n  }\n\n  fetchNew() {\n    fetch().then(res => {\n      this.setState({\n        data: res\n      });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <center>\n          <br />\n          <br />\n          <h4>{this.props.mod ? this.props.mod : \"Max iterations\"} vs. Time</h4>\n          in seconds\n          <br />\n          <br />\n          {this.state.data && (\n            <LineChart\n              width={730}\n              height={500}\n              data={this.state.data}\n              margin={{ top: 5, right: 20, left: 0, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"5 5\" />\n              <XAxis dataKey=\"name\" />\n              <Tooltip />\n              <YAxis dataKey=\"time\" />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"time\"\n                stroke=\"#0052cc\"\n                strokeWidth={4}\n              />\n            </LineChart>\n          )}\n        </center>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}