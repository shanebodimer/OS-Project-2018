{"ast":null,"code":"import _classCallCheck from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/shane/Git/OS-Project-2018/Frontend/src/Components/BatchResult.jsx\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nvar data = [{\n  name: \"Page A\",\n  modifier: 4000\n}, {\n  name: \"Page B\",\n  modifier: 3000\n}, {\n  name: \"Page C\",\n  modifier: 2000\n}, {\n  name: \"Page D\",\n  modifier: 2780\n}, {\n  name: \"Page E\",\n  modifier: 1890\n}, {\n  name: \"Page F\",\n  modifier: 2390\n}, {\n  name: \"Page G\",\n  modifier: 3490\n}];\n\nvar BatchResult =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BatchResult, _React$Component);\n\n  function BatchResult(props) {\n    var _this;\n\n    _classCallCheck(this, BatchResult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BatchResult).call(this, props)); // Set initial state\n\n    _this.state = {\n      data: false\n    }; // Bind state operators\n\n    _this.fetchNew = _this.fetchNew.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BatchResult, [{\n    key: \"runTest\",\n    value: function runTest(params) {\n      var _this2 = this;\n\n      // this.setState({});\n      var key = Math.floor(Math.random() * 1000000000).toFixed(0);\n      this.setState({\n        running: true,\n        key: key,\n        speed: false,\n        size: false\n      });\n      run(key, params).then(function (res) {\n        _this2.setState({\n          speed: res,\n          size: params.size,\n          max: params.iterations,\n          nodes: params.nodes,\n          threads: params.threads\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(LineChart, {\n        width: 730,\n        height: 500,\n        data: data,\n        margin: {\n          top: 5,\n          right: 20,\n          left: 0,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"modifier\",\n        stroke: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BatchResult;\n}(React.Component);\n\nexport { BatchResult as default };","map":{"version":3,"sources":["/Users/shane/Git/OS-Project-2018/Frontend/src/Components/BatchResult.jsx"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data","name","modifier","BatchResult","props","state","fetchNew","bind","params","key","Math","floor","random","toFixed","setState","running","speed","size","run","then","res","max","iterations","nodes","threads","top","right","left","bottom","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nconst data = [\n  { name: \"Page A\", modifier: 4000 },\n  { name: \"Page B\", modifier: 3000 },\n  { name: \"Page C\", modifier: 2000 },\n  { name: \"Page D\", modifier: 2780 },\n  { name: \"Page E\", modifier: 1890 },\n  { name: \"Page F\", modifier: 2390 },\n  { name: \"Page G\", modifier: 3490 }\n];\n\nexport default class BatchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set initial state\n    this.state = {\n      data: false\n    };\n\n    // Bind state operators\n    this.fetchNew = this.fetchNew.bind(this);\n  }\n\n  runTest(params) {\n    // this.setState({});\n    let key = Math.floor(Math.random() * 1000000000).toFixed(0);\n    this.setState({ running: true, key: key, speed: false, size: false });\n    run(key, params).then(res => {\n      this.setState({\n        speed: res,\n        size: params.size,\n        max: params.iterations,\n        nodes: params.nodes,\n        threads: params.threads\n      });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <center>\n          <br />\n          <br />\n          <br />\n          <LineChart\n            width={730}\n            height={500}\n            data={data}\n            margin={{ top: 5, right: 20, left: 0, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"modifier\" stroke=\"#8884d8\" />\n          </LineChart>\n        </center>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}