{"ast":null,"code":"import _defineProperty from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shane/Git/OS-Project-2018/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/shane/Git/OS-Project-2018/Frontend/src/Components/BatchForm.jsx\";\nimport React from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport Dropdown from \"./Dropdown.jsx\";\n\nvar ManyForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManyForm, _React$Component);\n\n  function ManyForm(props) {\n    var _this;\n\n    _classCallCheck(this, ManyForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManyForm).call(this, props));\n    _this.state = {\n      size: \"100x100\",\n      iterations: 10,\n      nodes: 1,\n      threads: 1,\n      modifier: \"Max iterations\",\n      from: 10,\n      to: 20\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitBatchTest = _this.submitBatchTest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManyForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value)); // Update default values\n\n      if ([event.target.name] === \"modifier\") {}\n    }\n  }, {\n    key: \"submitBatchTest\",\n    value: function submitBatchTest() {\n      var params = {\n        type: \"batch\",\n        modifier: this.state.modifier,\n        from: this.state.from,\n        to: this.state.to,\n        size: this.state.size,\n        iterations: this.state.iterations,\n        nodes: this.state.nodes,\n        threads: this.state.threads\n      };\n      this.props.submitTest(params);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"w-100 body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-images\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \" Configure batch test\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"modifier\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Modifier\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"modifier\",\n        className: \"at-select\",\n        value: this.state.modifier,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Max iterations\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Number of nodes\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Threads per node\"))), React.createElement(Dropdown, {\n        name: \"size\",\n        title: \"Image size\",\n        handleChange: this.handleChange,\n        value: this.state.size,\n        options: [\"100x100\", \"200x200\", \"300x300\", \"400x400\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), this.state.modifier !== \"Max iterations\" && React.createElement(Dropdown, {\n        name: \"iterations\",\n        title: \"Max iterations\",\n        handleChange: this.handleChange,\n        value: this.state.iterations,\n        options: [10, 20, 50, 75, 100],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), this.state.modifier === \"Max iterations\" && React.createElement(\"div\", {\n        className: \"row options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        name: \"from\",\n        title: \"From max iterations\",\n        handleChange: this.handleChange,\n        value: this.state.from,\n        options: [10, 20, 50, 75, 100],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        name: \"to\",\n        title: \"To max iterations\",\n        handleChange: this.handleChange,\n        value: this.state.to,\n        options: [10, 20, 50, 75, 100],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), this.state.modifier !== \"Number of nodes\" && React.createElement(Dropdown, {\n        name: \"nodes\",\n        title: \"Number of nodes\",\n        handleChange: this.handleChange,\n        value: this.state.nodes,\n        options: [1, 2, 3, 4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), this.state.modifier === \"Number of nodes\" && React.createElement(\"div\", {\n        className: \"row options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        name: \"from\",\n        title: \"From number of nodes\",\n        handleChange: this.handleChange,\n        value: this.state.from,\n        options: [1, 2, 3, 4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        name: \"to\",\n        title: \"To number of nodes\",\n        handleChange: this.handleChange,\n        value: this.state.to,\n        options: [1, 2, 3, 4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), this.state.modifier !== \"Threads per node\" && React.createElement(Dropdown, {\n        name: \"threads\",\n        title: \"Threads per node\",\n        handleChange: this.handleChange,\n        value: this.state.threads,\n        options: [1, 2, 3, 4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), this.state.modifier === \"Threads per node\" && React.createElement(\"div\", {\n        className: \"row options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        name: \"from\",\n        title: \"From threads per node\",\n        handleChange: this.handleChange,\n        value: this.state.from,\n        options: [1, 2, 3, 4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        name: \"to\",\n        title: \"To threads per node\",\n        handleChange: this.handleChange,\n        value: this.state.to,\n        options: [1, 2, 3, 4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btn btn-lg btn-primary w-100 text-left\",\n        onClick: this.submitBatchTest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Generate fractals\", React.createElement(\"i\", {\n        className: \"fas fa-arrow-right fa-sm ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ManyForm;\n}(React.Component);\n\nexport { ManyForm as default };","map":{"version":3,"sources":["/Users/shane/Git/OS-Project-2018/Frontend/src/Components/BatchForm.jsx"],"names":["React","FormGroup","Input","Dropdown","ManyForm","props","state","size","iterations","nodes","threads","modifier","from","to","handleChange","bind","submitBatchTest","event","setState","target","name","value","params","type","submitTest","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\n\nimport Dropdown from \"./Dropdown.jsx\";\n\nexport default class ManyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: \"100x100\",\n      iterations: 10,\n      nodes: 1,\n      threads: 1,\n      modifier: \"Max iterations\",\n      from: 10,\n      to: 20\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submitBatchTest = this.submitBatchTest.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n\n    // Update default values\n    if ([event.target.name] === \"modifier\") {\n    }\n  }\n\n  submitBatchTest() {\n    let params = {\n      type: \"batch\",\n      modifier: this.state.modifier,\n      from: this.state.from,\n      to: this.state.to,\n      size: this.state.size,\n      iterations: this.state.iterations,\n      nodes: this.state.nodes,\n      threads: this.state.threads\n    };\n\n    this.props.submitTest(params);\n  }\n\n  render() {\n    return (\n      <div className=\"w-100 body\">\n        <h3>\n          <i className=\"far fa-images\" /> Configure batch test\n        </h3>\n\n        <FormGroup>\n          <small className=\"modifier\">Modifier</small>\n          <Input\n            type=\"select\"\n            name=\"modifier\"\n            className=\"at-select\"\n            value={this.state.modifier}\n            onChange={this.handleChange}\n          >\n            <option>Max iterations</option>\n            <option>Number of nodes</option>\n            <option>Threads per node</option>\n          </Input>\n        </FormGroup>\n\n        <Dropdown\n          name=\"size\"\n          title={\"Image size\"}\n          handleChange={this.handleChange}\n          value={this.state.size}\n          options={[\"100x100\", \"200x200\", \"300x300\", \"400x400\"]}\n        />\n\n        {this.state.modifier !== \"Max iterations\" && (\n          <Dropdown\n            name=\"iterations\"\n            title={\"Max iterations\"}\n            handleChange={this.handleChange}\n            value={this.state.iterations}\n            options={[10, 20, 50, 75, 100]}\n          />\n        )}\n        {this.state.modifier === \"Max iterations\" && (\n          <div className=\"row options\">\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"from\"\n                title={\"From max iterations\"}\n                handleChange={this.handleChange}\n                value={this.state.from}\n                options={[10, 20, 50, 75, 100]}\n              />\n            </div>\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"to\"\n                title={\"To max iterations\"}\n                handleChange={this.handleChange}\n                value={this.state.to}\n                options={[10, 20, 50, 75, 100]}\n              />\n            </div>\n          </div>\n        )}\n\n        {this.state.modifier !== \"Number of nodes\" && (\n          <Dropdown\n            name=\"nodes\"\n            title={\"Number of nodes\"}\n            handleChange={this.handleChange}\n            value={this.state.nodes}\n            options={[1, 2, 3, 4]}\n          />\n        )}\n        {this.state.modifier === \"Number of nodes\" && (\n          <div className=\"row options\">\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"from\"\n                title={\"From number of nodes\"}\n                handleChange={this.handleChange}\n                value={this.state.from}\n                options={[1, 2, 3, 4]}\n              />\n            </div>\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"to\"\n                title={\"To number of nodes\"}\n                handleChange={this.handleChange}\n                value={this.state.to}\n                options={[1, 2, 3, 4]}\n              />\n            </div>\n          </div>\n        )}\n\n        {this.state.modifier !== \"Threads per node\" && (\n          <Dropdown\n            name=\"threads\"\n            title={\"Threads per node\"}\n            handleChange={this.handleChange}\n            value={this.state.threads}\n            options={[1, 2, 3, 4]}\n          />\n        )}\n        {this.state.modifier === \"Threads per node\" && (\n          <div className=\"row options\">\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"from\"\n                title={\"From threads per node\"}\n                handleChange={this.handleChange}\n                value={this.state.from}\n                options={[1, 2, 3, 4]}\n              />\n            </div>\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"to\"\n                title={\"To threads per node\"}\n                handleChange={this.handleChange}\n                value={this.state.to}\n                options={[1, 2, 3, 4]}\n              />\n            </div>\n          </div>\n        )}\n\n        <br />\n        <div\n          className=\"btn btn-lg btn-primary w-100 text-left\"\n          onClick={this.submitBatchTest}\n        >\n          Generate fractals\n          <i className=\"fas fa-arrow-right fa-sm ml-2\" />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}