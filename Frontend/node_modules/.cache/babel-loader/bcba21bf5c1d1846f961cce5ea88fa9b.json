{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactTransitionGroup = require(\"react-transition-group\");\n\nvar _theme = require(\"@atlaskit/theme\");\n\nvar _page = require(\"@atlaskit/page\");\n\nvar _styled = require(\"./styled\");\n\nvar semibold = '600';\nvar regular = '400';\n\nvar getMarkerColor = function getMarkerColor(status) {\n  switch (status) {\n    case 'unvisited':\n      return _theme.colors.N70;\n\n    case 'current':\n      return _theme.colors.B300;\n\n    case 'visited':\n      return _theme.colors.B300;\n\n    case 'disabled':\n      return _theme.colors.B300;\n\n    default:\n      return null;\n  }\n};\n\nvar getTextColor = function getTextColor(status) {\n  switch (status) {\n    case 'unvisited':\n      return _theme.colors.N300;\n\n    case 'current':\n      return _theme.colors.B300;\n\n    case 'visited':\n      return _theme.colors.N800;\n\n    case 'disabled':\n      return _theme.colors.N70;\n\n    default:\n      return null;\n  }\n};\n\nvar getFontWeight = function getFontWeight(status) {\n  switch (status) {\n    case 'unvisited':\n      return regular;\n\n    case 'current':\n      return semibold;\n\n    case 'visited':\n      return semibold;\n\n    case 'disabled':\n      return semibold;\n\n    default:\n      return null;\n  }\n};\n\nvar Fade = function Fade(_ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n  return _react.default.createElement(_reactTransitionGroup.CSSTransition, (0, _extends2.default)({}, props, {\n    classNames: \"fade\"\n  }), children);\n};\n\nvar ProgressTrackerStage =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  (0, _inherits2.default)(ProgressTrackerStage, _PureComponent);\n\n  function ProgressTrackerStage(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ProgressTrackerStage);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressTrackerStage).call(this, props));\n    _this.state = {\n      transitioning: false,\n      oldMarkerColor: getMarkerColor(_this.props.item.status),\n      oldPercentageComplete: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ProgressTrackerStage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var newState = this.state;\n      newState.transitioning = true;\n      this.setState(newState);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      var newState = this.state;\n      newState.transitioning = true;\n      this.setState(newState);\n    }\n  }, {\n    key: \"shouldShowLink\",\n    value: function shouldShowLink() {\n      return this.props.item.status === 'visited' && !this.props.item.noLink;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          item = _this$props.item,\n          render = _this$props.render,\n          transitionDelay = _this$props.transitionDelay,\n          transitionSpeed = _this$props.transitionSpeed,\n          transitionEasing = _this$props.transitionEasing;\n\n      var onEntered = function onEntered() {\n        _this2.setState({\n          transitioning: false,\n          oldMarkerColor: getMarkerColor(item.status),\n          oldPercentageComplete: item.percentageComplete\n        });\n      };\n\n      return _react.default.createElement(_page.GridColumn, {\n        medium: 2\n      }, _react.default.createElement(_styled.ProgressTrackerStageContainer, null, _react.default.createElement(Fade, {\n        appear: true,\n        in: this.state.transitioning,\n        onEntered: onEntered,\n        timeout: transitionDelay + transitionSpeed\n      }, _react.default.createElement(_styled.ProgressTrackerStageMarker, {\n        oldMarkerColor: this.state.oldMarkerColor,\n        color: getMarkerColor(item.status),\n        transitionSpeed: transitionSpeed,\n        transitionDelay: transitionDelay,\n        transitionEasing: transitionEasing\n      })), _react.default.createElement(Fade, {\n        appear: true,\n        in: this.state.transitioning,\n        onEntered: onEntered,\n        timeout: transitionDelay + transitionSpeed\n      }, _react.default.createElement(_styled.ProgressTrackerStageBar, {\n        oldPercentageComplete: this.state.oldPercentageComplete,\n        percentageComplete: item.percentageComplete,\n        transitionSpeed: transitionSpeed,\n        transitionDelay: transitionDelay,\n        transitionEasing: transitionEasing\n      })), _react.default.createElement(Fade, {\n        appear: true,\n        in: this.state.transitioning,\n        onEntered: onEntered,\n        timeout: transitionDelay + transitionSpeed\n      }, _react.default.createElement(_styled.ProgressTrackerStageTitle, {\n        color: getTextColor(item.status),\n        fontweight: getFontWeight(item.status),\n        transitionSpeed: transitionSpeed,\n        transitionDelay: transitionDelay\n      }, this.shouldShowLink() ? render.link({\n        item: item\n      }) : item.label))));\n    }\n  }]);\n  return ProgressTrackerStage;\n}(_react.PureComponent);\n\nexports.default = ProgressTrackerStage;","map":null,"metadata":{},"sourceType":"script"}