{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent } from '@atlaskit/analytics-next';\nimport withDeprecationWarnings from './withDeprecationWarnings';\nimport getButtonProps from './getButtonProps';\nimport CustomComponentProxy from './CustomComponentProxy';\nimport getButtonStyles from '../styled/getButtonStyles';\nimport ButtonContent from '../styled/ButtonContent';\nimport ButtonWrapper from '../styled/ButtonWrapper';\nimport IconWrapper from '../styled/IconWrapper';\nimport LoadingSpinner from '../styled/LoadingSpinner';\n\nvar _require = require('../../package.json'),\n    packageName = _require.name,\n    packageVersion = _require.version;\n\nvar StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"sc-1o41kgk-0\"\n})([\"\\n  \", \";\\n\"], getButtonStyles);\nStyledButton.displayName = 'StyledButton'; // Target the <a> here to override a:hover specificity.\n\nvar StyledLink = styled.a.withConfig({\n  displayName: \"Button__StyledLink\",\n  componentId: \"sc-1o41kgk-1\"\n})([\"\\n  a& {\\n    \", \";\\n  }\\n\"], getButtonStyles);\nStyledLink.displayName = 'StyledLink';\nvar StyledSpan = styled.span.withConfig({\n  displayName: \"Button__StyledSpan\",\n  componentId: \"sc-1o41kgk-2\"\n})([\"\\n  \", \";\\n\"], getButtonStyles);\nStyledSpan.displayName = 'StyledSpan';\n\nvar createStyledComponent = function createStyledComponent() {\n  // Override pseudo-state specificity.\n  // This is necessary because we don't know what DOM element the custom component will render.\n  var component = styled(CustomComponentProxy).withConfig({\n    displayName: \"Button__component\",\n    componentId: \"sc-1o41kgk-3\"\n  })([\"&,a&,&:hover,&:active,&:focus{\", \"}\"], getButtonStyles);\n  component.displayName = 'StyledCustomComponent';\n  return component;\n};\n\nexport var defaultProps = {\n  appearance: 'default',\n  isDisabled: false,\n  isSelected: false,\n  isLoading: false,\n  spacing: 'default',\n  type: 'button',\n  shouldFitContainer: false,\n  autoFocus: false\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"button\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isActive: false,\n      isFocus: false,\n      isHover: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"customComponent\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isInteractive\", function () {\n      return !_this.props.isDisabled && !_this.props.isLoading;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseEnter\", function () {\n      _this.setState({\n        isHover: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseLeave\", function () {\n      return _this.setState({\n        isHover: false,\n        isActive: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseDown\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isActive: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseUp\", function () {\n      return _this.setState({\n        isActive: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onFocus\", function (event) {\n      _this.setState({\n        isFocus: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onBlur\", function (event) {\n      _this.setState({\n        isFocus: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onInnerClick\", function (e) {\n      if (!_this.isInteractive()) {\n        e.stopPropagation();\n      }\n\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getInnerRef\", function (ref) {\n      _this.button = ref;\n      if (_this.props.innerRef) _this.props.innerRef(ref);\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.component !== nextProps.component) {\n        delete this.customComponent;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoFocus && this.button) {\n        this.button.focus();\n      }\n    }\n  }, {\n    key: \"getStyledComponent\",\n    value: function getStyledComponent() {\n      if (this.props.component) {\n        if (!this.customComponent) {\n          this.customComponent = createStyledComponent();\n        }\n\n        return this.customComponent;\n      }\n\n      if (this.props.href) {\n        return this.props.isDisabled ? StyledSpan : StyledLink;\n      }\n\n      return StyledButton;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          iconBefore = _this$props.iconBefore,\n          iconAfter = _this$props.iconAfter,\n          isLoading = _this$props.isLoading,\n          shouldFitContainer = _this$props.shouldFitContainer,\n          spacing = _this$props.spacing,\n          appearance = _this$props.appearance,\n          isSelected = _this$props.isSelected,\n          isDisabled = _this$props.isDisabled; // $FlowFixMe - Cannot call `getButtonProps` with `this` bound to `component` because `Button` [1] is incompatible with `Button` [2].\n\n      var buttonProps = getButtonProps(this);\n      var StyledComponent = this.getStyledComponent();\n      var iconIsOnlyChild = !!(iconBefore && !iconAfter && !children || iconAfter && !iconBefore && !children);\n      return React.createElement(StyledComponent, _extends({\n        innerRef: this.getInnerRef\n      }, buttonProps), React.createElement(ButtonWrapper, {\n        onClick: this.onInnerClick,\n        fit: !!shouldFitContainer\n      }, isLoading ? React.createElement(LoadingSpinner, {\n        spacing: spacing,\n        appearance: appearance,\n        isSelected: isSelected,\n        isDisabled: isDisabled\n      }) : null, iconBefore ? React.createElement(IconWrapper, {\n        isLoading: isLoading,\n        spacing: buttonProps.spacing,\n        isOnlyChild: iconIsOnlyChild\n      }, iconBefore) : null, children ? React.createElement(ButtonContent, {\n        isLoading: isLoading,\n        followsIcon: !!iconBefore,\n        spacing: buttonProps.spacing\n      }, children) : null, iconAfter ? React.createElement(IconWrapper, {\n        isLoading: isLoading,\n        spacing: buttonProps.spacing,\n        isOnlyChild: iconIsOnlyChild\n      }, iconAfter) : null));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", defaultProps);\n\nexport var ButtonBase = Button;\nexport var ButtonWithoutAnalytics = withDeprecationWarnings(Button);\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n  componentName: 'button',\n  packageName: packageName,\n  packageVersion: packageVersion\n})(withAnalyticsEvents({\n  onClick: createAndFireEventOnAtlaskit({\n    action: 'clicked',\n    actionSubject: 'button',\n    attributes: {\n      componentName: 'button',\n      packageName: packageName,\n      packageVersion: packageVersion\n    }\n  })\n})(ButtonWithoutAnalytics));","map":null,"metadata":{},"sourceType":"module"}