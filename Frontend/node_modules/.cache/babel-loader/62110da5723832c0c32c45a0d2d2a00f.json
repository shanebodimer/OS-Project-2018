{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\n\nvar getAppearanceProps = function getAppearanceProps(props, state) {\n  var appearance = props.appearance,\n      className = props.className,\n      isDisabled = props.isDisabled,\n      isLoading = props.isLoading,\n      isSelected = props.isSelected,\n      spacing = props.spacing,\n      shouldFitContainer = props.shouldFitContainer;\n  var isActive = state.isActive,\n      isFocus = state.isFocus,\n      isHover = state.isHover;\n  return {\n    appearance: appearance,\n    className: className,\n    disabled: isDisabled,\n    isActive: isActive,\n    isFocus: isFocus,\n    isHover: isHover,\n    isLoading: isLoading,\n    isSelected: isSelected,\n    spacing: spacing,\n    fit: shouldFitContainer\n  };\n};\n\nvar getInteractionProps = function getInteractionProps(component) {\n  var onBlur = component.onBlur,\n      onFocus = component.onFocus,\n      onMouseDown = component.onMouseDown,\n      onMouseEnter = component.onMouseEnter,\n      onMouseLeave = component.onMouseLeave,\n      onMouseUp = component.onMouseUp;\n  var tabIndex = component.props.tabIndex; // Block onClick/Keyboard submit while isLoading\n\n  var onClick = component.props.isLoading ? function (e) {\n    e.preventDefault();\n  } : component.props.onClick;\n  return {\n    onBlur: onBlur,\n    onClick: onClick,\n    onFocus: onFocus,\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onMouseUp: onMouseUp,\n    tabIndex: tabIndex\n  };\n};\n\nvar getLinkElementProps = function getLinkElementProps(props) {\n  var href = props.href,\n      target = props.target;\n  return {\n    href: href,\n    target: target\n  };\n};\n\nvar getButtonElementProps = function getButtonElementProps(props) {\n  var ariaHaspopup = props.ariaHaspopup,\n      ariaExpanded = props.ariaExpanded,\n      ariaControls = props.ariaControls,\n      form = props.form,\n      type = props.type;\n  return {\n    'aria-haspopup': ariaHaspopup,\n    'aria-expanded': ariaExpanded,\n    'aria-controls': ariaControls,\n    form: form,\n    type: type\n  };\n};\n\nvar getButtonProps = function getButtonProps(component) {\n  var props = component.props,\n      state = component.state;\n\n  var defaultProps = _objectSpread({\n    id: props.id\n  }, getAppearanceProps(props, state), getInteractionProps(component), {\n    'aria-label': props.ariaLabel\n  });\n\n  if (props.component) {\n    return _objectSpread({}, props, defaultProps);\n  }\n\n  if (props.href) {\n    if (props.isDisabled) {\n      return defaultProps;\n    }\n\n    return _objectSpread({}, defaultProps, getLinkElementProps(props));\n  }\n\n  return _objectSpread({}, defaultProps, getButtonElementProps(props));\n};\n\nexport default getButtonProps;","map":null,"metadata":{},"sourceType":"module"}