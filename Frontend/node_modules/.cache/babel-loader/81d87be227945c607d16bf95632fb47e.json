{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getLensModeEnlargedImageCoordinates, getInPlaceEnlargedImageCoordinates } from './lib/imageCoordinates';\nimport { LargeImageShape } from './prop-types/Image';\nimport { ContainerDimensions } from './prop-types/EnlargedImage';\nimport { noop } from './utils';\nimport Point from './prop-types/Point';\nimport { getEnlargedImageContainerStyle, getEnlargedImageStyle } from './lib/styles';\n\nvar _class = function (_React$Component) {\n  _inherits(_class, _React$Component);\n\n  function _class(props) {\n    _classCallCheck(this, _class);\n\n    var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props));\n\n    _this.state = {\n      isTransitionEntering: false,\n      isTransitionActive: false,\n      isTransitionLeaving: false,\n      isTransitionDone: false\n    };\n    _this.timers = [];\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.scheduleCssTransition(nextProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.timers.forEach(function (timerId) {\n        clearTimeout(timerId);\n      });\n    }\n  }, {\n    key: 'scheduleCssTransition',\n    value: function scheduleCssTransition(nextProps) {\n      var _this2 = this;\n\n      var _props = this.props,\n          fadeDurationInMs = _props.fadeDurationInMs,\n          isActive = _props.isActive,\n          isPositionOutside = _props.isPositionOutside;\n      var willIsActiveChange = isActive !== nextProps.isActive;\n      var willIsPositionOutsideChange = isPositionOutside !== nextProps.isPositionOutside;\n\n      if (!willIsActiveChange && !willIsPositionOutsideChange) {\n        return;\n      }\n\n      if (nextProps.isActive && !nextProps.isPositionOutside) {\n        this.setState({\n          isTrainsitionDone: false,\n          isTransitionEntering: true\n        });\n        this.timers.push(setTimeout(function () {\n          _this2.setState({\n            isTransitionEntering: false,\n            isTransitionActive: true\n          });\n        }, 0));\n      } else {\n        this.setState({\n          isTransitionLeaving: true,\n          isTransitionActive: false\n        });\n        this.timers.push(setTimeout(function () {\n          _this2.setState({\n            isTransitionDone: true,\n            isTransitionLeaving: false\n          });\n        }, fadeDurationInMs));\n      }\n    }\n  }, {\n    key: 'getImageCoordinates',\n    value: function getImageCoordinates() {\n      var _props2 = this.props,\n          cursorOffset = _props2.cursorOffset,\n          largeImage = _props2.largeImage,\n          containerDimensions = _props2.containerDimensions,\n          position = _props2.position,\n          smallImage = _props2.smallImage,\n          isInPlaceMode = _props2.isInPlaceMode;\n\n      if (isInPlaceMode) {\n        return getInPlaceEnlargedImageCoordinates({\n          containerDimensions: containerDimensions,\n          largeImage: largeImage,\n          position: position\n        });\n      }\n\n      return getLensModeEnlargedImageCoordinates({\n        containerDimensions: containerDimensions,\n        cursorOffset: cursorOffset,\n        largeImage: largeImage,\n        position: position,\n        smallImage: smallImage\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          containerClassName = _props3.containerClassName,\n          imageClassName = _props3.imageClassName,\n          isLazyLoaded = _props3.isLazyLoaded,\n          largeImage = _props3.largeImage,\n          _props3$largeImage = _props3.largeImage,\n          _props3$largeImage$al = _props3$largeImage.alt,\n          alt = _props3$largeImage$al === undefined ? '' : _props3$largeImage$al,\n          _props3$largeImage$on = _props3$largeImage.onLoad,\n          onLoad = _props3$largeImage$on === undefined ? noop : _props3$largeImage$on,\n          _props3$largeImage$on2 = _props3$largeImage.onError,\n          onError = _props3$largeImage$on2 === undefined ? noop : _props3$largeImage$on2;\n      var component = React.createElement('div', {\n        className: containerClassName,\n        style: this.containerStyle\n      }, React.createElement('img', {\n        alt: alt,\n        className: imageClassName,\n        src: largeImage.src,\n        srcSet: largeImage.srcSet,\n        sizes: largeImage.sizes,\n        style: this.imageStyle,\n        onLoad: onLoad,\n        onError: onError\n      }));\n\n      if (isLazyLoaded) {\n        return this.isVisible ? component : null;\n      }\n\n      return component;\n    }\n  }, {\n    key: 'isVisible',\n    get: function get() {\n      var _state = this.state,\n          isTransitionEntering = _state.isTransitionEntering,\n          isTransitionActive = _state.isTransitionActive,\n          isTransitionLeaving = _state.isTransitionLeaving;\n      return isTransitionEntering || isTransitionActive || isTransitionLeaving;\n    }\n  }, {\n    key: 'containerStyle',\n    get: function get() {\n      var _props4 = this.props,\n          containerStyle = _props4.containerStyle,\n          containerDimensions = _props4.containerDimensions,\n          fadeDurationInMs = _props4.fadeDurationInMs,\n          isPortalRendered = _props4.isPortalRendered,\n          isInPlaceMode = _props4.isInPlaceMode;\n      var isTransitionActive = this.state.isTransitionActive;\n      return getEnlargedImageContainerStyle({\n        containerDimensions: containerDimensions,\n        containerStyle: containerStyle,\n        fadeDurationInMs: fadeDurationInMs,\n        isTransitionActive: isTransitionActive,\n        isInPlaceMode: isInPlaceMode,\n        isPortalRendered: isPortalRendered\n      });\n    }\n  }, {\n    key: 'imageStyle',\n    get: function get() {\n      var _props5 = this.props,\n          imageStyle = _props5.imageStyle,\n          largeImage = _props5.largeImage;\n      return getEnlargedImageStyle({\n        imageCoordinates: this.getImageCoordinates(),\n        imageStyle: imageStyle,\n        largeImage: largeImage\n      });\n    }\n  }]);\n\n  return _class;\n}(React.Component);\n\n_class.displayName = 'EnlargedImage';\n_class.defaultProps = {\n  fadeDurationInMs: 0,\n  isLazyLoaded: true\n};\n_class.propTypes = {\n  containerClassName: PropTypes.string,\n  containerStyle: PropTypes.object,\n  cursorOffset: Point,\n  position: Point,\n  fadeDurationInMs: PropTypes.number,\n  imageClassName: PropTypes.string,\n  imageStyle: PropTypes.object,\n  isActive: PropTypes.bool,\n  isLazyLoaded: PropTypes.bool,\n  largeImage: LargeImageShape,\n  containerDimensions: ContainerDimensions,\n  isPortalRendered: PropTypes.bool,\n  isInPlaceMode: PropTypes.bool\n};\nexport default _class;","map":null,"metadata":{},"sourceType":"module"}