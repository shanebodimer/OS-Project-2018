"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _page = require("@atlaskit/page");

var _styledComponents = require("styled-components");

var _ProgressTrackerStage = _interopRequireDefault(require("../ProgressTrackerStage"));

var _styled = require("./styled");

var _ProgressTrackerLink = _interopRequireDefault(require("../ProgressTrackerLink"));

var TRANSITION_SPEED = 300;
var LINEAR_TRANSITION_SPEED = 50;
var easeOut = 'cubic-bezier(0.15,1,0.3,1)';

var ProgressTracker =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(ProgressTracker, _PureComponent);

  function ProgressTracker() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ProgressTracker);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ProgressTracker)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "createTheme", function () {
      return {
        spacing: _this.props.spacing,
        columns: _this.props.items.length * 2
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "props", void 0);
    return _this;
  }

  (0, _createClass2.default)(ProgressTracker, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.setState({
        prevStages: this.props.items.map(function (stage) {
          return (0, _objectSpread2.default)({}, stage, {
            percentageComplete: 0
          });
        })
      });
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps() {
      var newState = this.state;
      newState.prevStages = this.props.items;
      this.setState(newState);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var progressChanges = this.props.items.filter(function (stage, index) {
        return stage.percentageComplete !== _this2.state.prevStages[index].percentageComplete;
      }).length;
      var totalStepsForward = this.props.items.filter(function (stage, index) {
        return stage.percentageComplete > _this2.state.prevStages[index].percentageComplete;
      }).length;
      var totalStepsBack = this.props.items.filter(function (stage, index) {
        return stage.percentageComplete < _this2.state.prevStages[index].percentageComplete;
      }).length;
      var stepsForward = totalStepsForward;
      var stepsBack = totalStepsBack;
      var items = this.props.items.map(function (stage, index) {
        var transitionSpeed = 0;
        var transitionDelay = 0;
        var transitionEasing = progressChanges > 1 ? 'linear' : easeOut;

        if (_this2.props.animated) {
          transitionSpeed = progressChanges > 1 ? LINEAR_TRANSITION_SPEED : TRANSITION_SPEED;

          if (stage.percentageComplete < _this2.state.prevStages[index].percentageComplete) {
            /** load each transition sequentially in reverse */
            transitionDelay = (stepsBack - 1) * transitionSpeed;
            stepsBack -= 1;
          } else if (stage.percentageComplete > _this2.state.prevStages[index].percentageComplete) {
            /** load each transition sequentially */
            transitionDelay = (totalStepsForward - stepsForward) * transitionSpeed;
            stepsForward -= 1;
          }
        }

        return _react.default.createElement(_ProgressTrackerStage.default, {
          key: stage.id,
          item: stage,
          render: _this2.props.render,
          transitionSpeed: transitionSpeed,
          transitionDelay: transitionDelay,
          transitionEasing: transitionEasing
        });
      });
      return _react.default.createElement(_styledComponents.ThemeProvider, {
        theme: this.createTheme()
      }, _react.default.createElement(_page.Grid, null, _react.default.createElement(_styled.ProgressTrackerContainer, null, items)));
    }
  }]);
  return ProgressTracker;
}(_react.PureComponent);

exports.default = ProgressTracker;
(0, _defineProperty2.default)(ProgressTracker, "defaultProps", {
  items: [],
  spacing: 'cosy',
  render: {
    link: function link(props) {
      return _react.default.createElement(_ProgressTrackerLink.default, props);
    }
  },
  animated: true
});