import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React, { Children, cloneElement, Component } from 'react';
import withDeprecationWarnings from './withDeprecationWarnings';
import Group, { GroupItem } from '../styled/ButtonGroup';

var ButtonGroup =
/*#__PURE__*/
function (_Component) {
  _inherits(ButtonGroup, _Component);

  function ButtonGroup() {
    _classCallCheck(this, ButtonGroup);

    return _possibleConstructorReturn(this, _getPrototypeOf(ButtonGroup).apply(this, arguments));
  }

  _createClass(ButtonGroup, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          appearance = _this$props.appearance,
          children = _this$props.children;
      return React.createElement(Group, null, Children.map(children, function (child, idx) {
        if (!child) {
          return null;
        }

        return React.createElement(GroupItem, {
          key: idx
        }, appearance ? cloneElement(child, {
          appearance: appearance
        }) : child);
      }));
    }
  }]);

  return ButtonGroup;
}(Component);

export default withDeprecationWarnings(ButtonGroup);