import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React, { Component } from 'react';
import styled, { css } from 'styled-components';
import * as colors from '../colors';
import { Consumer } from './Context';

var orTextColor = function orTextColor(preferred) {
  return function (p) {
    return p[preferred] || p.textColor;
  };
};

var Div = styled.div.withConfig({
  displayName: "Reset__Div",
  componentId: "sc-15i6ali-0"
})(["\n  ", ";\n"], function (p) {
  return css(["\n    background-color: ", ";\n    color: ", ";\n\n    a {\n      color: ", ";\n    }\n    a:hover {\n      color: ", ";\n    }\n    a:active {\n      color: ", ";\n    }\n    a:focus {\n      outline-color: ", ";\n    }\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n      color: ", ";\n    }\n    h6 {\n      color: ", ";\n    }\n    small {\n      color: ", ";\n    }\n  "], p.backgroundColor, p.textColor, orTextColor('linkColor'), orTextColor('linkColorHover'), orTextColor('linkColorActive'), orTextColor('linkColorOutline'), orTextColor('headingColor'), orTextColor('subtleHeadingColor'), orTextColor('subtleTextColor'));
});
var defaultTheme = {
  backgroundColor: colors.N0,
  linkColor: colors.B400,
  linkColorHover: colors.B300,
  linkColorActive: colors.B500,
  linkColorOutline: colors.B100,
  headingColor: colors.N800,
  subtleHeadingColor: colors.N200,
  subtleTextColor: colors.N200,
  textColor: colors.N900
};

var Reset =
/*#__PURE__*/
function (_Component) {
  _inherits(Reset, _Component);

  function Reset() {
    _classCallCheck(this, Reset);

    return _possibleConstructorReturn(this, _getPrototypeOf(Reset).apply(this, arguments));
  }

  _createClass(Reset, [{
    key: "render",
    value: function render() {
      var _this = this;

      return React.createElement(Consumer, null, function (theme) {
        return React.createElement(Div, _extends({}, defaultTheme, theme, _this.props), _this.props.children);
      });
    }
  }]);

  return Reset;
}(Component);

export { Reset as default };