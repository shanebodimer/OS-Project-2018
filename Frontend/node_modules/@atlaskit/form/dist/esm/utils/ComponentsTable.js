import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React, { PureComponent } from 'react';
import CheckCircleIcon from '@atlaskit/icon/glyph/check-circle';
import CrossCircleIcon from '@atlaskit/icon/glyph/cross-circle';
import EditorWarningIcon from '@atlaskit/icon/glyph/editor/warning';
import { colors } from '@atlaskit/theme';
/* eslint-disable import/no-extraneous-dependencies */

import Tooltip from '@atlaskit/tooltip';

var ComponentsTable =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(ComponentsTable, _PureComponent);

  function ComponentsTable() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ComponentsTable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComponentsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "renderSupportIcon", function (support) {
      if (support) return React.createElement(CheckCircleIcon, {
        primaryColor: colors.G400
      });
      return React.createElement(CrossCircleIcon, {
        primaryColor: colors.R400
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "renderSupportInfo", function () {
      var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      if (info.length) return React.createElement(Tooltip, {
        content: info
      }, React.createElement(EditorWarningIcon, {
        primaryColor: colors.Y400
      }));
      return null;
    });

    return _this;
  }

  _createClass(ComponentsTable, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return React.createElement("table", null, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, "Package"), React.createElement("th", null, "Version"), React.createElement("th", null, "Component"), React.createElement("th", null, "Supported"), React.createElement("th", null, "Info"))), React.createElement("tbody", null, this.props.components.map(function (component) {
        return React.createElement("tr", {
          key: component.component
        }, React.createElement("td", null, component.package), React.createElement("td", null, component.version), React.createElement("td", null, component.component), React.createElement("td", null, _this2.renderSupportIcon(component.support)), React.createElement("td", null, _this2.renderSupportInfo(component.supportInfo)));
      })));
    }
  }]);

  return ComponentsTable;
}(PureComponent);

export { ComponentsTable as default };