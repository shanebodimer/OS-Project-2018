{"version":3,"sources":["registerServiceWorker.js","Views/Root.jsx","Components/Dropdown.jsx","Components/SingleForm.jsx","Components/BatchForm.jsx","Components/LHS.jsx","Components/SingleResult.jsx","Utilities/api.jsx","Components/BatchResult.jsx","Components/RHS.jsx","Views/Test.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Root","react_default","a","createElement","className","this","props","children","React","Component","SingleForm","reactstrap_es","title","type","name","value","onChange","handleChange","options","map","option","i","key","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","size","iterations","nodes","threads","bind","assertThisInitialized","submitSingleTest","event","setState","defineProperty","target","params","submitTest","Dropdown_SingleForm","min","onClick","ManyForm","modifier","from","to","submitBatchTest","LHS","updateTestType","runTest","testType","_this2","Tabs","tabs","label","content","SingleForm_SingleForm","BatchForm_ManyForm","onSelect","tab","selected","SingleResult","imgHash","Date","now","ReactImageMagnify","assign","enlargedImagePosition","enlargedImageStyle","backgroundSize","fadeDurationInMs","hoverDelayInMs","smallImage","isFluidWidth","src","concat","largeImage","width","height","running","speed","max","href","fetch","axios","post","headers","Content-Type","Access-Control-Allow-Origin","response","data","BatchResult","res","setInterval","fetchNew","mod","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","strokeWidth","Tooltip","YAxis","domain","Line","stroke","animationDuration","RHS","progress","SingleResult_SingleResult","BatchResult_BatchResult","Single","document","Math","floor","random","toFixed","run","LHS_LHS","RHS_RHS","App","BrowserRouter","Root_Root","Route","exact","path","render","Test_Single","App_App","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d1d25e59.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n// import { Link } from 'react-router-dom'\n\n// Components\n\n// Main component that all other components will load with\n// Components load in at: this.props.children\nexport default class Root extends React.Component {\n  render() {\n    return (\n      <div>\n        {/* Navigation ///////////////////////////////////////////////////// */}\n        <div className=\"navigation\">Mandelbrot Fractal Set Generator</div>\n        <div className=\"sub-navigation\">\n          <small>\n            <span className=\"text-muted\">RPi Cluster status: </span>\n            192.168.1.47 <span className=\"text-success mr-2\">(online)</span>\n            192.168.1.48 <span className=\"text-success mr-2\">(online)</span>\n            192.168.1.49 <span className=\"text-success mr-2\">(online)</span>\n            192.168.1.50 <span className=\"text-success mr-2\">(online)</span>\n          </small>\n        </div>\n\n        {/* Children /////////////////////////////////////////////////////// */}\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\n\nexport default class SingleForm extends React.Component {\n  render() {\n    return (\n      <FormGroup>\n        <small>{this.props.title}</small>\n        <Input\n          type=\"select\"\n          name={this.props.name}\n          className=\"at-select\"\n          value={this.props.value}\n          onChange={this.props.handleChange}\n        >\n          {this.props.options.map(function(option, i) {\n            return <option key={i}>{option}</option>;\n          })}\n        </Input>\n      </FormGroup>\n    );\n  }\n}\n","import React from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\n\nimport Dropdown from \"./Dropdown.jsx\";\n\nexport default class SingleForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: \"100x100\",\n      iterations: 10,\n      nodes: 1,\n      threads: 1\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submitSingleTest = this.submitSingleTest.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  submitSingleTest() {\n    let params = {\n      type: \"single\",\n      size: this.state.size,\n      iterations: this.state.iterations,\n      nodes: this.state.nodes,\n      threads: this.state.threads\n    };\n\n    this.props.submitTest(params);\n  }\n\n  render() {\n    return (\n      <div className=\"w-100 body\">\n        <h3>\n          <i className=\"far fa-image\" /> Configure single test\n        </h3>\n\n        <Dropdown\n          name=\"size\"\n          title={\"Image size\"}\n          handleChange={this.handleChange}\n          value={this.state.size}\n          options={[\n            \"100x100\",\n            \"250x250\",\n            \"500x500\",\n            \"750x750\",\n            \"1000x1000\",\n            \"5000x5000\",\n            \"10000x10000\"\n          ]}\n        />\n\n        <FormGroup>\n          <small>Max iterations</small>\n          <Input\n            type=\"number\"\n            min={0}\n            name={\"iterations\"}\n            className=\"at-select number\"\n            value={this.state.iterations}\n            onChange={this.handleChange}\n          />\n        </FormGroup>\n\n        <Dropdown\n          name=\"nodes\"\n          title={\"Number of worker nodes\"}\n          handleChange={this.handleChange}\n          value={this.state.nodes}\n          options={[1, 2, 3]}\n        />\n\n        <Dropdown\n          name=\"threads\"\n          title={\"Threads per node\"}\n          handleChange={this.handleChange}\n          value={this.state.threads}\n          options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n        />\n\n        <br />\n        <div\n          className=\"btn btn-lg btn-primary w-100 text-left\"\n          onClick={this.submitSingleTest}\n        >\n          Generate fractal\n          <i className=\"fas fa-arrow-right fa-sm ml-2\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\n\nimport Dropdown from \"./Dropdown.jsx\";\n\nexport default class ManyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: \"100x100\",\n      iterations: 10,\n      nodes: 1,\n      threads: 1,\n      modifier: \"Max iterations\",\n      from: 10,\n      to: 20\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submitBatchTest = this.submitBatchTest.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n\n    // Update default values\n    switch (event.target.value) {\n      case \"Max iterations\":\n        this.setState({ from: 10, to: 20 });\n        break;\n      case \"Number of worker nodes\":\n        this.setState({ from: 1, to: 2 });\n        break;\n      case \"Threads per node\":\n        this.setState({ from: 1, to: 2 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  submitBatchTest() {\n    console.log(this.state.to, this.state.from);\n    let params = {\n      type: \"batch\",\n      modifier: this.state.modifier,\n      from: this.state.from,\n      to: this.state.to,\n      size: this.state.size,\n      iterations: this.state.iterations,\n      nodes: this.state.nodes,\n      threads: this.state.threads\n    };\n\n    this.props.submitTest(params);\n  }\n\n  render() {\n    return (\n      <div className=\"w-100 body\">\n        <h3>\n          <i className=\"far fa-images\" /> Configure batch test\n        </h3>\n\n        <FormGroup>\n          <small className=\"modifier\">Modifier</small>\n          <Input\n            type=\"select\"\n            name=\"modifier\"\n            className=\"at-select\"\n            value={this.state.modifier}\n            onChange={this.handleChange}\n          >\n            <option>Max iterations</option>\n            <option>Number of worker nodes</option>\n            <option>Threads per node</option>\n          </Input>\n        </FormGroup>\n\n        <Dropdown\n          name=\"size\"\n          title={\"Image size\"}\n          handleChange={this.handleChange}\n          value={this.state.size}\n          options={[\n            \"100x100\",\n            \"250x250\",\n            \"500x500\",\n            \"750x750\",\n            \"1000x1000\",\n            \"5000x5000\",\n            \"10000x10000\"\n          ]}\n        />\n\n        {this.state.modifier !== \"Max iterations\" && (\n          <FormGroup>\n            <small>Max iterations</small>\n            <Input\n              type=\"number\"\n              min={0}\n              name=\"iterations\"\n              className=\"at-select number\"\n              value={this.state.iterations}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        )}\n        {this.state.modifier === \"Max iterations\" && (\n          <div className=\"row options\">\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"from\"\n                title={\"From max iterations\"}\n                handleChange={this.handleChange}\n                value={this.state.from}\n                options={[10, 20, 50, 75, 100]}\n              />\n            </div>\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"to\"\n                title={\"To max iterations\"}\n                handleChange={this.handleChange}\n                value={this.state.to}\n                options={[10, 20, 50, 75, 100]}\n              />\n            </div>\n          </div>\n        )}\n\n        {this.state.modifier !== \"Number of worker nodes\" && (\n          <Dropdown\n            name=\"nodes\"\n            title={\"Number of worker nodes\"}\n            handleChange={this.handleChange}\n            value={this.state.nodes}\n            options={[1, 2, 3]}\n          />\n        )}\n        {this.state.modifier === \"Number of worker nodes\" && (\n          <div className=\"row options\">\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"from\"\n                title={\"From # of worker nodes\"}\n                handleChange={this.handleChange}\n                value={this.state.from}\n                options={[1, 2, 3]}\n              />\n            </div>\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"to\"\n                title={\"To # of worker nodes\"}\n                handleChange={this.handleChange}\n                value={this.state.to}\n                options={[1, 2, 3]}\n              />\n            </div>\n          </div>\n        )}\n\n        {this.state.modifier !== \"Threads per node\" && (\n          <Dropdown\n            name=\"threads\"\n            title={\"Threads per node\"}\n            handleChange={this.handleChange}\n            value={this.state.threads}\n            options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n          />\n        )}\n        {this.state.modifier === \"Threads per node\" && (\n          <div className=\"row options\">\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"from\"\n                title={\"From threads per node\"}\n                handleChange={this.handleChange}\n                value={this.state.from}\n                options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n              />\n            </div>\n            <div className=\"col-md\">\n              <Dropdown\n                name=\"to\"\n                title={\"To threads per node\"}\n                handleChange={this.handleChange}\n                value={this.state.to}\n                options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n              />\n            </div>\n          </div>\n        )}\n\n        <br />\n        <div\n          className=\"btn btn-lg btn-primary w-100 text-left\"\n          onClick={this.submitBatchTest}\n        >\n          Generate fractals\n          <i className=\"fas fa-arrow-right fa-sm ml-2\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nimport Tabs from \"@atlaskit/tabs\";\n\nimport SingleForm from \"./SingleForm.jsx\";\nimport BatchForm from \"./BatchForm.jsx\";\n\n// Styles\nimport \"./lhs.css\";\n\nexport default class LHS extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set initial state\n    this.state = {\n      size: 100,\n      iterations: 10,\n      nodes: 1,\n      threads: 1\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submitTest = this.submitTest.bind(this);\n    this.updateTestType = this.updateTestType.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  submitTest(params) {\n    this.props.runTest(params);\n  }\n\n  updateTestType(type) {\n    this.props.testType(type);\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-4 lhs\">\n        <Tabs\n          tabs={[\n            {\n              type: \"single\",\n              label: (\n                <small>\n                  <i className=\"far fa-image mr-1\" />\n                  Single test\n                </small>\n              ),\n              content: <SingleForm submitTest={this.submitTest} />\n            },\n            {\n              type: \"batch\",\n              label: (\n                <small>\n                  <i className=\"far fa-images mr-1\" />\n                  Batch test\n                </small>\n              ),\n              content: <BatchForm submitTest={this.submitTest} />\n            }\n          ]}\n          onSelect={tab => this.updateTestType(tab.type)}\n          selected={this.props.type === \"single\" ? 0 : 1}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactImageMagnify from \"react-image-magnify\";\n\nexport default class SingleResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set initial state\n    this.state = {\n      imgHash: Date.now()\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"row w-100\">\n        <div className=\"col-md-8 text-center\">\n          <center>\n            {this.props.size && (\n              <ReactImageMagnify\n                className=\"result-img\"\n                enlargedImagePosition=\"over\"\n                enlargedImageStyle={{ backgroundSize: \"3000% 3000%\" }}\n                fadeDurationInMs={0}\n                hoverDelayInMs={0}\n                {...{\n                  smallImage: {\n                    isFluidWidth: true,\n                    src: `http://64.251.149.246/api/frac.bmp?${\n                      this.state.imgHash\n                    }`\n                  },\n                  largeImage: {\n                    src: `http://64.251.149.246/api/frac.bmp?${\n                      this.state.imgHash\n                    }`,\n                    width: 1200,\n                    height: 1800\n                  }\n                }}\n              />\n            )}\n            {!this.props.size && (\n              <div className=\"placeholder\">\n                {this.props.running && (\n                  <i className=\"fas fa-spinner fa-spin fa-5x text-white\" />\n                )}\n              </div>\n            )}\n            <pre>\n              {this.props.size ? (\n                this.props.size\n              ) : (\n                <span>{this.props.running ? \"Running\" : \"Waiting...\"}</span>\n              )}\n            </pre>\n          </center>\n        </div>\n\n        <div className=\"col-md-4\">\n          {this.props.size && (\n            <div className=\"results h-100\">\n              <div className=\"speed shine move bg-primary\">\n                <center>\n                  Completed in\n                  <br />\n                  <h1>{this.props.speed}</h1>\n                  seconds\n                </center>\n              </div>\n              <div className=\"details\">\n                <pre>\n                  Configuration:\n                  <br />\n                  <h6>\n                    <b>{this.props.size}</b> size\n                  </h6>\n                  <h6>\n                    <b>{this.props.max}</b> iterations\n                  </h6>\n                  <h6>\n                    <b>{this.props.nodes}</b> nodes\n                  </h6>\n                  <h6>\n                    <b>{this.props.threads}</b> threads\n                  </h6>\n                </pre>\n              </div>\n\n              <a\n                href=\"http://64.251.149.246/api/frac.bmp\"\n                className=\"btn btn-outline-primary btn-sm mt-4\"\n              >\n                Download image <i className=\"fas fa-download\" />\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n// Search\nexport const run = (key, params) =>\n  axios\n    .post(\n      `http://64.251.149.246/api/run.php`,\n      { key: key, params },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }\n    )\n    .then(function(response) {\n      console.log(response.data);\n      return response.data.toFixed(4);\n      // return 1;\n    })\n    .catch(function(error) {\n      console.log(\"run() error:\", error);\n      return error;\n    });\n\nexport const fetch = () =>\n  axios\n    .post(\n      `http://64.251.149.246/api/results.json`,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }\n    )\n    .then(function(response) {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch(function(error) {\n      console.log(\"run() error:\", error);\n      return error;\n    });\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nimport { fetch } from \"../Utilities/api.jsx\";\n\nexport default class BatchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set initial state\n    this.state = {\n      data: false\n    };\n\n    fetch().then(res => {\n      this.setState({\n        data: res\n      });\n    });\n\n    setInterval(\n      () =>\n        fetch().then(res => {\n          this.setState({\n            data: res\n          });\n        }),\n      500\n    );\n\n    // Bind state operators\n    this.fetchNew = this.fetchNew.bind(this);\n  }\n\n  fetchNew() {\n    fetch().then(res => {\n      this.setState({\n        data: res\n      });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <center>\n          <h4>{this.props.mod ? this.props.mod : \"Max iterations\"} vs. Time</h4>\n          in seconds\n          <br />\n          {this.state.data && (\n            <LineChart\n              width={730}\n              height={500}\n              data={this.state.data}\n              margin={{ top: 5, right: 20, left: 0, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"5 5\" />\n              <XAxis dataKey=\"name\" strokeWidth={2} />\n              <Tooltip />\n              <YAxis dataKey=\"time\" strokeWidth={2} domain={[\"auto\", \"auto\"]} />\n              {/* <Legend /> */}\n              <Line\n                type=\"monotone\"\n                dataKey=\"time\"\n                stroke=\"#0052cc\"\n                strokeWidth={4}\n                animationDuration={100}\n              />\n            </LineChart>\n          )}\n          <a\n            className=\"btn btn-outline-primary btn-sm\"\n            href=\"http://64.251.149.246/api/results.json\"\n            target=\"blank\"\n          >\n            View raw data <i className=\"fas fa-external-link-alt\" />\n          </a>\n        </center>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ProgressTracker } from \"@atlaskit/progress-tracker\";\n\nimport SingleResult from \"./SingleResult.jsx\";\nimport BatchResult from \"./BatchResult.jsx\";\n\nimport { run } from \"../Utilities/api.jsx\";\n\nimport \"./rhs.css\";\n\nexport default class RHS extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    // Demo progress\n    // setInterval(\n    //   () =>\n    //     this.setState({\n    //       progress: this.state.progress < 100 ? this.state.progress + 10 : 0\n    //     }),\n    //   500\n    // );\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-8 rhs\">\n        <div className=\"title\">\n          <small>\n            {this.props.testType === \"single\" ? (\n              <span>\n                <i className=\"far fa-image fa-fw mr-1 text-primary\" />\n                Single test\n              </span>\n            ) : (\n              <span>\n                <i className=\"far fa-images fa-fw mr-1 text-primary\" />\n                Batch test\n              </span>\n            )}\n          </small>\n        </div>\n\n        <div className=\"inside d-flex align-items-center justify-content-center\">\n          {this.props.testType === \"single\" ? (\n            <SingleResult\n              speed={this.props.speed}\n              size={this.props.size}\n              max={this.props.max}\n              nodes={this.props.nodes}\n              threads={this.props.threads}\n              running={this.props.running}\n            />\n          ) : (\n            <BatchResult mod={this.props.modifier} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Components\nimport LHS from \"../Components/LHS.jsx\";\nimport RHS from \"../Components/RHS.jsx\";\n\n// Utilities\nimport { run } from \"../Utilities/api.jsx\";\nimport { throws } from \"assert\";\n\nexport default class Single extends React.Component {\n  constructor(props) {\n    super(props);\n\n    document.title = \"Mandelbrot Fractal Set Generator\";\n\n    // Set initial state\n    this.state = {\n      testType: \"single\",\n      running: false,\n      key: false,\n      speed: false,\n      size: false,\n      max: false,\n      nodes: false,\n      threads: false,\n      modifier: false\n    };\n\n    // Bind state operators\n    this.runTest = this.runTest.bind(this);\n    this.testType = this.testType.bind(this);\n  }\n\n  testType(type) {\n    this.setState({ testType: type });\n  }\n\n  runTest(params) {\n    // this.setState({});\n    let key = Math.floor(Math.random() * 1000000000).toFixed(0);\n    this.setState({ running: true, key: key, speed: false, size: false });\n    run(key, params).then(res => {\n      this.setState({\n        speed: res,\n        size: params.size,\n        max: params.iterations,\n        nodes: params.nodes,\n        threads: params.threads,\n        modifier: params.modifier,\n        running: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"single\">\n        <div className=\"row\">\n          <LHS\n            testType={this.testType}\n            type={this.state.testType}\n            runTest={this.runTest}\n            running={this.state.running}\n          />\n          <RHS\n            key={this.state.key}\n            running={this.state.running}\n            testType={this.state.testType}\n            speed={this.state.speed}\n            size={this.state.size}\n            max={this.state.max}\n            nodes={this.state.nodes}\n            threads={this.state.threads}\n            modifier={this.state.modifier}\n            running={this.state.running}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\n\n// Root view\nimport Root from \"./Views/Root.jsx\";\n\n// Public views\nimport Test from \"./Views/Test.jsx\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Root>\n          {/* Public */}\n          <Route exact path={\"/\"} render={props => <Test {...props} />} />\n\n          {/* Private */}\n          {/* <Route path={'/private'} render={props => <Private {...props} />} /> */}\n        </Root>\n      </BrowserRouter>\n    );\n  }\n}\n","import 'babel-polyfill'\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport registerServiceWorker from './registerServiceWorker'\n\nimport App from './App.jsx'\n\n// Styles\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './Utilities/custom.css'\n\n// FontAwesome\nimport './Utilities/fa/fontawesome-all.css'\n// import './Utilities/fa/fa-light.min.js'\n// import './Utilities/fa/fa-regular.min.js'\n// import './Utilities/fa/fa-solid.min.js'\n// import './Utilities/fa/fa-brands.min.js'\n\nrender(<App />, window.document.getElementById('root'))\n\n// https://stackoverflow.com/questions/47953732/what-does-registerserviceworker-do-in-react-js\nregisterServiceWorker()\n"],"sourceRoot":""}